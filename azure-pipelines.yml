stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Azure Pipelines
      demands:
      - msbuild
      - visualstudio
      vmImage: 'windows-2019'

    variables:
      solution: '**\src\VSTSDemoGeneratorV2.sln'
      artifactName: 'drop'

    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 5.11.0'
      inputs:
        versionSpec: 5.11.0

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:Configuration=Debug /p:Platform="Any CPU" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'

    - task: CopyFiles@1
      displayName: 'Copy Files to: $(build.sourcesdirectory)\src\VstsDemoBuilder\obj\Release\Package\PackageTmp'
      inputs:
        SourceFolder: '$(build.artifactstagingdirectory)\' 
        Contents: '**\*'
        TargetFolder: '$(build.sourcesdirectory)\Artifacts'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.sourcesdirectory)\Artifacts'
        ArtifactName: '$(artifactName)'



- stage: Test
  dependsOn: Build
  condition: and(succeeded(), or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'Manual')))
  displayName: Test Deployment
  jobs: 
  - deployment: DeployWeb
    displayName: Deploy to Test Environment

    environment: 
      name: 'Test'

    variables: 
       webAppName: 'dgnew'
    strategy:
      runOnce:
        deploy:
          pool: 
            vmImage: 'windows-2019'         
          steps:
            - task: DownloadBuildArtifacts@0
              displayName: 'Download Build Artifacts'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.DefaultWorkingDirectory)'
            
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'demogen-connection'
                appType: webApp
                WebAppName: '$(webAppName)-test'
                AppSettings: '-DefaultTemplate eShopOnWeb -Password $(Password) -ClientId $(ClientId-test) -ClientSecret $(ClientSecret-test) -RedirectUri $(RedirectUri-test) -AppScope $(AppScope-test)'

- stage: Production
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
  displayName: Production Deployment
  jobs: 
  - deployment: DeployWeb
    displayName: Deploy to Production Environment

    environment: 
      name: 'Production'

    variables: 
       webAppName: 'dgnew'
    strategy:
      runOnce:
        deploy:
          pool: 
            vmImage: 'windows-2019'         
          steps:
            - task: DownloadBuildArtifacts@0
              displayName: 'Download Build Artifacts'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.DefaultWorkingDirectory)'
            
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'demogen-connection'
                appType: webApp
                WebAppName: '$(webAppName)'
                AppSettings: '-DefaultTemplate eShopOnWeb -Password $(Password) -ClientId $(ClientId) -ClientSecret $(ClientSecret) -RedirectUri $(RedirectUri) -AppScope $(AppScope)'