stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      name: Azure Pipelines
      demands:
      - msbuild
      - visualstudio
      vmImage: 'windows-2019'

    variables:
      solution: '**\src\VSTSDemoGeneratorV2.sln'
      artifactName: 'drop'


    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 5.11.0'
      inputs:
        versionSpec: 5.11.0

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:Configuration=Debug /p:Platform="Any CPU" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'

    - task: CopyFiles@1
      displayName: 'Copy Files to: $(build.sourcesdirectory)\src\VstsDemoBuilder\obj\Release\Package\PackageTmp'
      inputs:
        SourceFolder: '$(build.artifactstagingdirectory)\' 
        Contents: '**\*'
        TargetFolder: '$(build.sourcesdirectory)\Artifacts'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.sourcesdirectory)\Artifacts'
        ArtifactName: '$(artifactName)'

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DymmyDeploymentJob
    pool:
      name: Azure Pipelines
      demands:
      - msbuild
      - visualstudio
      vmImage: 'windows-2019'
    steps:
      - script: echo "This is a dummy job to satisfy the requirement of having at least one job with no dependencies."
        displayName: 'Dummy Job'

  - job: DeploymentJob
    pool:
      name: Azure Pipelines
      demands:
      - msbuild
      - visualstudio
      vmImage: 'windows-2019'

    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.DefaultWorkingDirectory)'
    
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'demogen-test'
        appType: webApp
        WebAppName: 'dgnew'


- stage: Production
  dependsOn: Build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: Production Deployment
  jobs: 
  - deployment: DeployWeb
    displayName: Deploy to Production Environment

    environment: 
      name: 'Production'

    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: drop
            
            - task: AzureWebApp@1
              displayName: 'Production Deployment'
              inputs:
                  azureSubscription: 'demogen-test'
                  appType: webApp
                  appName: 'dgnew'
                  package: '$(Agent.BuildDirectory)/**/*.zip'
