{
    "build": [
        {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Azure CLI ",
            "timeoutInMinutes": 0,
            "task": {
                "id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "connectedServiceNameARM": "",
                "scriptLocation": "inlineScript",
                "scriptPath": "",
                "inlineScript": "# this will create Azure resource group\naz group create --location $(location) --name $(resourcegroup)\n\naz acr create -n $(ACR) -g $(resourcegroup) --sku $(sku) --admin-enabled true",
                "args": "",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
            }
        },
        {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Build an image",
            "timeoutInMinutes": 0,
            "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "$(ACR).azurecr.io",
                "command": "Build an image",
                "dockerFile": "Source/Dockerfile",
                "arguments": "-t $(ACR).azurecr.io/$(ImageName):$(Build.BuildId)",
                "useDefaultContext": "true",
                "buildContext": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(ImageName):$(Build.BuildId)",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "true",
                "addDefaultLabels": "true",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
            }
        },
        {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Push Image",
            "timeoutInMinutes": 0,
            "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "$(ACR).azurecr.io",
                "command": "Push an image",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "useDefaultContext": "true",
                "buildContext": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(ImageName):$(Build.BuildId)",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
            }
        }
    ],
    "options": [
        {
            "enabled": false,
            "definition": {
                "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
            },
            "inputs": {
                "branchFilters": "[\"+refs/heads/*\"]",
                "additionalFields": "{}"
            }
        },
        {
            "enabled": false,
            "definition": {
                "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
            },
            "inputs": {
                "workItemType": "Bug",
                "assignToRequestor": "true",
                "additionalFields": "{}"
            }
        }
    ],
    "variables": {
        "ACR": {
            "value": "tailwindtraderacr$UUID$"
        },
        "ImageName": {
            "value": "website"
        },
        "location": {
            "value": "westus"
        },
        "resourcegroup": {
            "value": "TailwindTraderWeb"
        },
        "sku": {
            "value": "Basic"
        },
        "system.debug": {
            "value": "false",
            "allowOverride": true
        }
    },
    "retentionRules": [
        {
            "branches": [
                "+refs/heads/*"
            ],
            "artifacts": [],
            "artifactTypesToDelete": [
                "FilePath",
                "SymbolStore"
            ],
            "daysToKeep": 10,
            "minimumToKeep": 1,
            "deleteBuildRecord": true,
            "deleteTestResults": true
        }
    ],
    "jobAuthorizationScope": "projectCollection",
    "jobTimeoutInMinutes": 60,
    "jobCancelTimeoutInMinutes": 5,
    "repository": {
        "properties": {
            "cleanOptions": "0",
            "labelSources": "0",
            "labelSourcesFormat": "$(build.buildNumber)",
            "reportBuildStatus": "true",
            "gitLfsSupport": "false",
            "skipSyncSource": "false",
            "checkoutNestedSubmodules": "false",
            "fetchDepth": "0"
        },
        "id": "$TailwindTraders-Website$",
        "type": "TfsGit",
        "name": "TailwindTraders-Website",
        "defaultBranch": "refs/heads/master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {},
    "quality": "definition",
    "drafts": [],
    "queue": {
        "name": "Hosted Ubuntu 1604",
        "pool": {
            "name": "Hosted Ubuntu 1604",
            "isHosted": true
        }
    },
    "name": "Website-CI",
    "path": "\\",
    "type": "build",
    "queueStatus": "enabled"
}